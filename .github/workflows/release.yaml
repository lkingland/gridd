# Release
# All commits to the main branch result in binaries being
# Both formal releases (from mergint the release PR) and informal/realtime builds of the top of the branch (the 'tip' version)
name: Release

on:
  push:
    branches:
      - "main"

jobs:
  # Ensure the code compiles
  compile:
    name: Compile
    runs-on: ubuntu-latest
      - name: Checkout
        uses: actions/checkout:@v2
      - name: Setup Go
        with:
          go-version: '^1.16'
        uses: actions/setup-go@v2
      - name: Build
        run: make build

  # Validate the code (linters, vetters, etc)
  validate:
    name: Validate
    steps:
      - name: Checkout
        uses: actions/checkout:@v2
      - name: Run Linters
        use: golangci/golangci-lint-action@v2
        with:
          version: v1.29 # required field
          args: -E goimports -E golint -E govet

  # Ensure passing unit tests
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
      - name: Checkout
        uses: actions/checkout:@v2
      - name: Setup Go
        with:
          go-version: '^1.16'
        uses: actions/setup-go@v2
      - name: Run Tests
        run: make test

  # Ensure passing integration tests
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
      - name: Checkout
        uses: actions/checkout:@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Provision Cluster
        uses: lkingland/kind-action@v1 # use ./hack/allocate.sh locally
        with:
          version: v0.10.0
          kubectl_version: v1.20.0
          knative_serving: v0.20.0
          knative_kourier: v0.20.0
          knative_eventing: v0.20.0
          config: testdata/cluster.yaml
      - name: Configure Cluster
        run: ./hack/configure.sh
      - name: Run Tests
        run: make test-integration

    # Create binaries, and a release if merging a release PR
    release:
      name: Create Release
      needs: [validate, build, unit-test, integration-test]
      - name: Use Release PRs
        uses: GoogleCloudPlatform/release-please-action@v2.5.5
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          bump-minor-pre-major: true
      - name: Major and Minor Tags
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}







